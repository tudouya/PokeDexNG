import { type NextRequest } from 'next/server';
import { vulnerabilityCategoryService } from '@/features/vulnerability-categories';
import {
  withAuthApiHandler,
  createSuccessResponse
} from '@/lib/services/shared.utils';
import { z } from 'zod';

// 搜索参数验证
const SearchSchema = z.object({
  q: z
    .string()
    .min(1, '搜索关键词不能为空')
    .max(100, '搜索关键词不能超过100个字符'),
  limit: z
    .string()
    .optional()
    .transform((val) => (val ? parseInt(val, 10) : 20))
    .refine((val) => val > 0 && val <= 100, '限制数量必须在1-100之间')
});

// GET /api/vulnerability-categories/search - 搜索分类
export const GET = withAuthApiHandler(async (request) => {
  const { searchParams } = new URL(request.url);

  // 将 URLSearchParams 转换为普通对象
  const params: Record<string, string> = {};
  searchParams.forEach((value, key) => {
    params[key] = value;
  });

  // 验证搜索参数
  const { q: query, limit } = SearchSchema.parse(params);

  // 执行搜索
  const results = await vulnerabilityCategoryService.search(query, limit);

  return createSuccessResponse(results);
});

import { NextRequest } from 'next/server';
import { vulnerabilityCategoryService } from '@/features/vulnerability-categories';
import { CategoryIdSchema } from '@/features/vulnerability-categories/validations/category.validation';
import {
  withAuthApiHandler,
  createSuccessResponse,
  NotFoundError
} from '@/lib/services/shared.utils';

// POST /api/vulnerability-categories/[id]/use - 记录分类使用
export const POST = withAuthApiHandler(
  async (request, user, { params }: { params: Promise<{ id: string }> }) => {
    // Next.js 15: await params before use
    const { id: paramId } = await params;
    // 验证ID参数
    const { id } = CategoryIdSchema.parse({ id: paramId });

    // 检查分类是否存在
    const category = await vulnerabilityCategoryService.findOne(id);
    if (!category) {
      throw new NotFoundError('分类');
    }

    // 记录使用
    await vulnerabilityCategoryService.recordUsage(id);

    return createSuccessResponse({
      message: '使用记录已更新',
      categoryId: id
    });
  }
);

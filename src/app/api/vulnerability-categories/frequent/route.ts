import { type NextRequest } from 'next/server';
import { vulnerabilityCategoryService } from '@/features/vulnerability-categories';
import {
  withAuthApiHandler,
  createSuccessResponse
} from '@/lib/services/shared.utils';
import { z } from 'zod';

// 查询参数验证
const FrequentSchema = z.object({
  limit: z
    .string()
    .optional()
    .transform((val) => (val ? parseInt(val, 10) : 10))
    .refine((val) => val > 0 && val <= 50, '限制数量必须在1-50之间')
});

// GET /api/vulnerability-categories/frequent - 获取常用分类
export const GET = withAuthApiHandler(async (request) => {
  const { searchParams } = new URL(request.url);

  // 将 URLSearchParams 转换为普通对象
  const params: Record<string, string> = {};
  searchParams.forEach((value, key) => {
    params[key] = value;
  });

  // 验证参数
  const { limit } = FrequentSchema.parse(params);

  // 获取常用分类
  const categories =
    await vulnerabilityCategoryService.getFrequentCategories(limit);

  return createSuccessResponse(categories);
});

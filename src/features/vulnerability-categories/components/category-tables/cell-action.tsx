'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuTrigger
} from '@/components/ui/dropdown-menu';
import { Button } from '@/components/ui/button';
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogDescription,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle
} from '@/components/ui/alert-dialog';
import {
  Edit,
  MoreHorizontal,
  Trash2,
  Eye,
  Copy,
  FolderPlus,
  Loader2
} from 'lucide-react';
import { toast } from 'sonner';
import type { VulnerabilityCategory } from '../../types';
import { useDeleteCategory } from '../../hooks/useCategories';

interface CellActionProps {
  data: VulnerabilityCategory;
}

export function CellAction({ data }: CellActionProps) {
  const router = useRouter();
  const [showDeleteDialog, setShowDeleteDialog] = useState(false);
  const { deleteCategory, deleting } = useDeleteCategory(data.id);

  // 查看详情
  const handleView = () => {
    router.push(`/dashboard/vuln-categories/${data.id}`);
  };

  // 编辑分类
  const handleEdit = () => {
    router.push(`/dashboard/vuln-categories/${data.id}/edit`);
  };

  // 创建子分类
  const handleCreateChild = () => {
    router.push(`/dashboard/vuln-categories/new?parentId=${data.id}`);
  };

  // 复制CWE ID
  const handleCopyCWE = async () => {
    if (!data.cweId) return;

    try {
      await navigator.clipboard.writeText(data.cweId);
      toast.success('CWE ID 已复制到剪贴板');
    } catch (error) {
      toast.error('复制失败');
    }
  };

  // 删除分类
  const handleDelete = async () => {
    try {
      const success = await deleteCategory();
      if (success) {
        toast.success('分类已删除');
        setShowDeleteDialog(false);
        // 刷新页面或更新数据
        window.location.reload();
      }
    } catch (error: any) {
      toast.error(error.message || '删除失败');
    }
  };

  return (
    <>
      <DropdownMenu>
        <DropdownMenuTrigger asChild>
          <Button variant='ghost' className='h-8 w-8 p-0'>
            <span className='sr-only'>打开菜单</span>
            <MoreHorizontal className='h-4 w-4' />
          </Button>
        </DropdownMenuTrigger>
        <DropdownMenuContent align='end'>
          <DropdownMenuLabel>操作</DropdownMenuLabel>

          <DropdownMenuItem onClick={handleView}>
            <Eye className='mr-2 h-4 w-4' />
            查看详情
          </DropdownMenuItem>

          <DropdownMenuItem onClick={handleEdit}>
            <Edit className='mr-2 h-4 w-4' />
            编辑分类
          </DropdownMenuItem>

          {!data.isLeaf && (
            <DropdownMenuItem onClick={handleCreateChild}>
              <FolderPlus className='mr-2 h-4 w-4' />
              创建子分类
            </DropdownMenuItem>
          )}

          {data.cweId && (
            <DropdownMenuItem onClick={handleCopyCWE}>
              <Copy className='mr-2 h-4 w-4' />
              复制 CWE ID
            </DropdownMenuItem>
          )}

          <DropdownMenuSeparator />

          <DropdownMenuItem
            onClick={() => setShowDeleteDialog(true)}
            className='text-red-600'
            disabled={!data.isLeaf}
          >
            <Trash2 className='mr-2 h-4 w-4' />
            删除分类
          </DropdownMenuItem>
        </DropdownMenuContent>
      </DropdownMenu>

      <AlertDialog open={showDeleteDialog} onOpenChange={setShowDeleteDialog}>
        <AlertDialogContent>
          <AlertDialogHeader>
            <AlertDialogTitle>确认删除</AlertDialogTitle>
            <AlertDialogDescription>
              确定要删除分类 &quot;{data.name}&quot; 吗？
              {!data.isLeaf && (
                <span className='mt-2 block text-sm text-red-600'>
                  注意：只能删除叶子节点分类（没有子分类的分类）
                </span>
              )}
              <span className='mt-2 block text-sm text-gray-600'>
                此操作不可撤销，但可以通过管理员恢复。
              </span>
            </AlertDialogDescription>
          </AlertDialogHeader>
          <AlertDialogFooter>
            <AlertDialogCancel disabled={deleting}>取消</AlertDialogCancel>
            <AlertDialogAction
              onClick={handleDelete}
              disabled={deleting || !data.isLeaf}
              className='bg-red-600 hover:bg-red-700'
            >
              {deleting && <Loader2 className='mr-2 h-4 w-4 animate-spin' />}
              删除
            </AlertDialogAction>
          </AlertDialogFooter>
        </AlertDialogContent>
      </AlertDialog>
    </>
  );
}
